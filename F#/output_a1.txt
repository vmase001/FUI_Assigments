OUTPUT for ASSIGMENT 1

Microsoft (R) F# Interactive version 10.1.0 for F# 4.1
Copyright (c) Microsoft Corporation. All Rights Reserved.

For help type #help;;

> val gcd : x:int -> y:int -> int

> val testcase1 : unit -> unit

>  The gcd of (6, 48) is 6
val it : unit = ()

>
val ( .+ ) : a:int * b:int -> c:int * d:int -> int * int

>
val testcase2 : unit -> unit

>
(1, 2) (.+) (3, 4) = (5,4)
val it : unit = ()

>
val ( .* ) : a:int * b:int -> c:int * d:int -> int * int

>
val testcase3 : unit -> unit

>
(1, 2) (.*) (16, 25) = (8,25)
val it : unit = ()

>
val testcase4 : unit -> unit

> (1, 2) (.+) (2, 3) (.*) (3, 4) = (1,1)
val it : unit = ()

>
val revlists : xs:'a list list -> 'a list list

> val testcase5 : unit -> unit

>
The reverse of [[1; 2; 3; 4; 5; 6; 7; 8; 9; 10]; [35; 36; 37; 38]; [2; 1]; []] is [[10; 9; 8; 7; 6; 5; 4; 3; 2; 1]; [38; 37; 36; 35]; [1; 2]; []]
val it : unit = ()

> val interleave : xs:'a list -> ys:'a list -> 'a list
val testcase6 : unit -> unit

>
The interleave of [3; 4; 5] and [1; 2; 3; 4; 5; 6; 7; 8; 9; 10] is [3; 1; 4; 2; 5; 3; 4; 5; 6; 7; 8; 9; 10]
val it : unit = ()

> val gencut : n:int * list:'a list -> 'a list * 'a list

>
val testcase7 : unit -> unit

> gencut of [1; 3; 4; 2; 7; 0; 9] with size 2 is ([1; 3], [4; 2; 7; 0; 9])
val it : unit = ()

>
val cut : list:'a list -> 'a list * 'a list

>
val testcase8 : unit -> unit

>
[1; 2; 3; 4; 5; 6] cut in half is ([1; 2; 3], [4; 5; 6])
val it : unit = ()

>
val shuffle : list:'a list -> 'a list
val testcase9 : unit -> unit

>
 [1; 2; 3; 4; 5; 6; 7; 8] shuffled is [1; 5; 2; 6; 3; 7; 4; 8]
val it : unit = ()

> 

assigment1.fsx(125,19): warning FS0025: Incomplete pattern matches on this expression.

val countaux : deck:'a list * target:'a list -> int when 'a : equality

>
val countshuffles : n:int -> int

>
val testcase10 : unit -> unit

> countshuffle 52 is 8
val it : unit = ()

>
> 